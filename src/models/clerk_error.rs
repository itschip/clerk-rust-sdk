/*
 * Clerk Backend API
 *
 * The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.dev/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.dev
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ClerkError {
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "long_message")]
    pub long_message: String,
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<serde_json::Value>,
}

impl ClerkError {
    pub fn new(message: String, long_message: String, code: String) -> ClerkError {
        ClerkError {
            message,
            long_message,
            code,
            meta: None,
        }
    }
}


